package test;

import com.alibaba.excel.util.StringUtils;

/**
 * Title: <br/>
 * Description: <br/>
 * Copyright: 2024 <br/>
 * Company:<br/>
 * Project: design-pattern <br/>
 *
 * @Author huanglian <br/>
 * Create Time:9/18/24 09:27 <br/>
 */
public class MyTest {
    public static void main(String[] args) {
        String str = "\"1. 辅助排查微信运维支持群中，用户提出的没有安全管理应用访问权限的问题，协调应用负责人，一起帮助用户增加了相关应用的权限，使得受影响用户得以正常的访问相关应用。\n" +
                "2. 根据前端工程师的要求，重新调整相关接口以后，本地运行测试完成，同步修改相关的接口文档，解决本地打包的依赖下载问题，完成本地镜像基础依赖的制作。\n" +
                "3. 帮助项目对接负责人，排查知识共享中心项目的密码管理方案，是否是单点登录，取消独立登录接口与页面，保证后续玉衡密码管理方案升级可以有效解决玉衡平台及其应用相关的弱口令的问题。\"\n" +
                "\"1. 油港定制的多租户改造方案初步开发完成多租户管理模块，梳理多租户如何与权限管理，首页的用户切换公司，从而显示其特有的应用功能关联起来。\n" +
                "2. 与前端工程师进行多租户管理的列表页面的联调，由于前端工程师的设计与后端理解有出入，调整相关的接口兼容不一致的地方，本地编写单元测试检查其新标准下的兼容性是否满足要求，能否保证项目的稳定运行。\n" +
                "3. 代码合并，解决各个工程师之间的版本差异导致的一些分支冲突，保证代码的高可用，并且执行单元测试，保证解决冲突的方式不会影响系统原始的功能。\"\n" +
                "\"1. 辅助测试工程师，排查docker安装之cpu是否开启虚拟化的问题，根据测试使用的电脑型号，查找对应的bios面板进入方法，进入bios发现没有找到vt选项，联系产品的官方销售渠道之后，了解到需要使用shift+delete进入高级设置选中成功开启cpu虚拟化。\n" +
                "2. 解决前后端联调过程中，前端工程师访问后台接口浏览器报错405的问题，发现是因为后台设置的接口类型固定为get，前端是用post请求，到时方法不兼容，调整调用方法之后解决其问题。\n" +
                "3. 研究玉衡框架中的登录方法的调用链路，设计多租户的场景中，租户id如何集成到现在的登录场景中的方案。\"\n" +
                "\"1. 研究玉衡平台各个模块之间的架构联系，研究玉衡架构表现方案，为了更好梳理清楚各个模块的功能联系，加深对玉衡平台的了解。\n" +
                "2. 根据研究清楚的渲染方案，详细的设计了统一认证，鉴权服务的身份认证模块，鉴权模块，授权模块，令牌管理模块，会话管理模块，安全型模块相关的内容，详细深入的认识到了玉衡平台的认证授权是如何执行的。\"\n" +
                "\"1. 梳理玉衡平台paas部分中的业务中详细的功能组件结构，其中包含了鉴权中心，用户中心，公告中心，消息中心，应用中心，服务中心，客服中心，告警中心，报表中心，运维中心，审批服务等等的详细结构。\n" +
                "2. 研究玉衡平台中ai中台相关技术框架，设计未来的和玉衡平台相关的ai监控，运维，部署综合场景的实际使用，尝试构建ai中台技术结构。\"\n" +
                "\"1. 研究市场上开源的用户同步，密码初始化带来的一些用户密码泄露存在的安全隐患的实际解决方案，例如关闭用户首次登录使用密码认证，强制使用手机号登录，无密码认证方案使用passkey进行认证，但是这种方案需要考虑用户的设备是否支持。\n" +
                "2. 调整系统管理-租户管理相关模块的内容，适配油港多租户适配最新的设计方案，并且重新设计相关对接方案，本地启动，梳理单元测试内容，保持对接工作的顺利稳定的运行。\n" +
                "3. 梳理系统管理-角色管理如何与租户概念无缝聚合，粗略设计出系统管理模块中给租户独立分配角色，并且分配对应的菜单访问内容功能的开发方案。\"\n" +
                "\"1. 梳理租户和用户之间的连携关系，设计好用户登录的时候管理租户的方案，进行系统管理-用户管理模块中和租户相关的开发工作。\n" +
                "2. 本地启动，设计单元测试的内容，并且进行相对应的单元测试的开发工作，完成单元测试，确保后续前后端联调的顺利有序推进。\n" +
                "3. 梳理系统管理-租户管理模块中涉及到所有sql是否关联上了租户id字段完成了租户数据隔离的效果了。\"\n" +
                "\"1. 辅助架构师，进行玉衡平台图形化部署功能的架构选型，选中国产开源面板1panel，拉取1panel代码，本地安装go语言开发环境，初步熟悉1panel的代码结构。\n" +
                "2. 梳理玉衡平台中存在actuator端点headdump漏洞，关闭相关接口，重启项目重新测试漏洞是否成功修复。\n" +
                "3. 梳理玉衡核心模块tool模块，分析其中各个模块的构成部件以及各个模块之间的相互依赖关系，修改tool各个模块的版本，提供油港多租户改造后续的核心模块修改工作的前置准备。\"\n" +
                "\"1. 继续梳理玉衡框架的核心包tool中的各个组件的版本控制，以及各个模块之间的依赖关系是什么，理清这些相互依赖的各个组件，统一升级他们的版本为了给油港多租户做好前置准备工作。\n" +
                "2. 辅助架构师研究图形化运维部署界面1panel的面板的应用商店，研究1panel官方提供的应用，根据他们的应用模版，自己尝试搭建一个专有应用，发布到自己本地的1panel环境，测试应用是否可以正常使用。\"\n" +
                "\"1. 根据手动移植1panel官方应用的经验，移植我们玉衡框架体系中存在的gateway应用到1panel中，编写对应的docker-compose文件，根据标准应用开发规范，设计好对应的简介文档内容，统一打包放入1panel指定的应用列表文件夹中。\n" +
                "2. 测试自定义应用，解决其中的存在的问题，保证开发流程的可行性，切换1panel图形化界面，刷新1panel面板的应用列表，尝试使用一键部署，解决其中存在的docker版本和docker-compoose文件不兼容的问题。\n" +
                "3. 梳理玉衡框架中tool核心包中的发送钉钉消息的内容，理清楚各个模块之间的依赖关系，统一修改各个模块的版本号，为后面油港多租户改造钉钉发送消息做好前置工作。\"\n" +
                "\"1. 梳理玉衡平台基础环境之一的MySQL搭建过程，以及具体使用的兼容版本，并且在本地进行模拟安装，详细研究安装过程。\n" +
                "2. 根据研究出来的详细安装过程及其兼容版本，进行1panel应用商店，玉衡平台兼容MySQL自定义应用实际开发工作。\n" +
                "3. 梳理tool核心依赖工具包中的，string处理工具的集成过程，依赖的父级模块内容，研究其相关的版本升级流程，统一升级其版本为后续的油港开发String工具包的定制调整做好前置准备工作。\"\n" +
                "\"1. 梳理玉衡平台基础环境之一的NACOS的搭建过程，以及实际情况中使用的版本，避免使用的时候产生一些因为软件版本过旧代理的兼容性问题和历史遗留漏洞问题。\n" +
                "2. 根据研究出来的详细安装过程及其兼容版本，进行1panel应用商店，玉衡平台兼容NAOCS自定义应用实际开发工作，并使用1panel图形化面板进行部署，测试可用性，稳定性，和兼容性。\n" +
                "3. 梳理玉衡框架中的核心模块tool中的多租户插件相关的内容，理清楚此多租户插件的工作原理，依赖关系，以及配置注意事项，统一升级各个依赖模块的版本，为后期多租户开发工作提供好前置准备工作。\"\n" +
                "\"1. 梳理玉衡平台资源监控平台夜莺的详细搭建过程，以及本地化获取夜莺部署的相关依赖，研究清楚这些依赖的版本号，和夜莺稳定版的版本号，防止后续的操作产生版本冲突的问题。\n" +
                "2. 实际上手，根据1panel的应用商店要求，开发定制的玉衡夜莺资源监控应用，并且推送到1panel面板中，通过图形化界面实际上手部署夜莺，并且调试其中存在的一些不兼容，不稳定的问题。\n" +
                "3. 研究并梳理玉衡框架中ORM架构相关的部分，理清各个模块的依赖关系，已经ORM框架的使用规范，统一升级主模块版本号和依赖模块的版本号，为后续的油港多租户的开发任务做好前置工作。\"\n" +
                "\"1. 梳理玉衡知识共享中心详细的搭建过程，以及预先提供知识共享中心部署的依赖本地化适配包，研究清楚这些依赖的版本号，为后期的知识共享中心上1panel面板的应用商店做好前置准备，避免一些不必要的兼容性问题。\n" +
                "2. 根据研究的结论，实际上手玉衡知识共享中心的1panel应用商店的定制化应用的开发工作，并将应用发布到本次自建的1panel面板的应用商店中，使用图形化界面安装开发的知识共享中心应用，测试其运行的稳定性和存在的问题，保证其稳定，可用。\n" +
                "3. 梳理玉衡框架中的核心模块tool中的缓存相关的cache模块的依赖关系树，研究其具体的工作原理，统一升级相关父模块和子模块的版本号，为后续的油港多租户功能的开发，提供前置支持。\"\n" +
                "\"1. 梳理玉衡平台系统管理模块的详细部署流程，清点相关的初始化sql脚本，研究清楚玉衡系统管理模块所需要的前置依赖包的版本号和兼容性情况，提前准备离线安装，情况下所需要的准备包。\n" +
                "2. 根据研究的结论以及1panle面板应用商店的要求，实际上手开发玉衡定制版本的应用，并且尝试上架应用商店，并且通过图形化面板，实际安装此应用，测试其稳定性和兼容性的情况。\n" +
                "3. 梳理玉衡框架核心模块tool中的权限管理体系相关的依赖树结构和相应的兼容版本号情况，统一升级其对应的版本号，为后续的油港多租户开发做好前置的准备工作。\"\n" +
                "\"1. 梳理玉衡平台缓存Redis的详细部署流程，研究清楚玉衡开发框架所以来的redis客户端版本号和Redis服务端的兼容性情况，提前准备离线安装，情况下所需要的准备包。\n" +
                "2. 根据研究的结论以及1panle面板应用商店的要求，实际上手开发玉衡定制版本Redis应用，并且尝试上架应用商店，并且通过图形化面板，实际安装Redis，切换玉衡平台测试环境中的缓存Redis为1panel面板部署服务端，测试其稳定性和兼容性的情况。\n" +
                "3. 梳理玉衡框架核心模块tool中的邮件发送工具包相关的依赖树结构和相应的兼容版本号情况，统一升级其对应的版本号，为后续的油港多租户开发做好前置的准备工作。\"\n" +
                "\"1. 旧版本的1panel面板，存在官方OTA更新的漏洞，升级最新版本的1panel面板之后成功解决漏洞，详细记录漏洞解决的存在现象，发现是因为文件权限管理存在问题，后续的版本中引入了更加精细的文件权限管理。\n" +
                "2. 梳理玉衡平台分布式日志数据库ELasticSearch的详细部署流程，研究清楚玉衡开发框架所以来的ELasticSearch客户端版本号和ELasticSearch服务端的兼容性情况，提前准备离线安装，情况下所需要的准备包。\n" +
                "3. 根据研究的结论以及1panle面板应用商店的要求，实际上手开发玉衡定制版本ELasticSearch应用，并且尝试上架应用商店，并且通过图形化面板，实际安装ELasticSearch，切换玉衡平台测试环境中的日志数据库ELasticSearch为1panel面板部署服务端，测试其稳定性和兼容性的情况。\n" +
                "\n" +
                "\n" +
                "\n" +
                "\n" +
                "\n" +
                "\n" +
                "\n" +
                "\"\n" +
                "\"1. 帮助架构师，重构Server-Send-Event模块中，发送消息的实体类构建方式，去除默认的方式中，画蛇添足的「data：」和「/n」字符串，重构以后，删除了这些返回内容中，画蛇添足的内容。\n" +
                "2. 梳理玉衡平台定时任务的详细部署流程，研究清楚玉衡开发框架定时任务版本号和前置依赖的兼容性情况，提前准备离线安装，情况下所需要的准备包。\n" +
                "3. 梳理玉衡框架核心模块tool中的http工具包相关的依赖树结构和相应的兼容版本号情况，统一升级其对应的版本号，为后续的油港多租户开发做好前置的准备工作。\"\n" +
                "\"1. 设计运维面板1panel玉衡内网环境部署方案：使用项目源代码编译一个本地离线安装包，由于前置依赖是docker，因此也准备好相关的docker离线安装方案。\n" +
                "2. 根据准备好的，离线安装物料，辅助运维工程师，设计并开发一键安装shell脚本，并且测试shell脚本是否可以正常执行，解决其中存在的问题。\n" +
                "3. 梳理1panel源代码，将前面几天开发完成的应用商店应用的安装包，离线安装到，面板的应用商店中，并且调试存在的问题，成功部署了redis应用，还留存了一些和面板相关的渲染兼容性的问题等待解决。\n" +
                "4. 梳理夜莺从零到一使用的详细过程，提供夜莺的详细使用指导。\"\n" +
                "\"1. 梳理玉衡知识库密码校验逻辑，重置数据库中所有用户的密码为超强密码。\n" +
                "2. 梳理视频教学平台的用户登录校验逻辑，使用超强密码重新设置数据库中用户的密码。\n" +
                "3. 梳理玉衡的单体运维面板的用户名称和密码，使用超强密码替换。\n" +
                "4. 梳理Grafana大盘的用户和密码，采用超强密码替换原有的密码，并且修改用户的名称为随机数字。\n" +
                "\"\n" +
                "\"1. 提供通过Nginx，相对路径代理其他域名下的其他http请求，解决跨域问题和http请求禁用问题的解决方案。\n" +
                "2. 夜莺资源监控平台集成Druid方案设计，通过Nginx代理其他的平台接口集成；通过超链接跳转Druid监控面板集成；通过修改夜莺平台原有功能集成。\n" +
                "3. 确立油港多租户改造新方案，在租户管理界面，管理当前租户下存在的用户有哪些？就是在租户管理界面，给特定的租户分配用户。\"\n" +
                "\"1. 设计油港多租户改造新方案中的租户管理，详细的处理链路逻辑，解决了平台管理员如何分配租户的系统管理员，平台管理员如何给系统管理员分配菜单，如何给租户分配用户。\n" +
                "2. 根据设计好的方案重新调整系统管理-租户管理模块中的新增租户，查询租户列表。\n" +
                "3. 设计租户-用户关联关系表，并且初始化好租户-用户关联关系表对应的ORM框架的基础开发工具类。\"\n" +
                "\"1. 梳理清楚平台管理员给租户分配此租户系统管理员的详细操作流程和操作逻辑，平台管理员通过系统管理-租户管理界面的列表查询界面，点击分配用户，弹出用户查询界面，管理员勾选然后选中分配。\n" +
                "2. 根据详细的操作逻辑进行配套的后端接口开发工作，开发了当前租户下为分配的用户分页查询接口。\n" +
                "3. 根据实际的业务流程，编写一些对应的测试用例，并且在本地进行测试，保持后期和前端工程师联调的接口顺利。\"\n" +
                "\"1. 根据梳理清楚的租户分配管理员的逻辑，开发完成平台管理员新增租户系统管理员接口。\n" +
                "2. 设计详细的测试用例，测试保证后续的前后端对接的顺利完成。\n" +
                "3. 设计平台管理员给租户分配菜单基础菜单的详细操作逻辑。\"\n" +
                "\"1. 根据设计好的平台管理员给租户分配系统管理员的操作流程；查询待分配用户-》选择用户-》提交选中记录；开发了查询此租户下未关联的用户列表接口，平台管理员给租户分配系统管理员接口，租户下具有的系统管理员列表查询接口。\n" +
                "2. 排查油港平台账号密码登录界面中返回的登录失败次数过多的原因：redis缓存没有更新；手动编写redis刷新脚本，并且执行成功解决登录不了的问题。\n" +
                "3. 分析玉衡平台Nacos使用方式中，数据过程传输是否是明文，使用了grpc协议，可以在一定程度上防止nacos客户端和服务端通信数据被第三方用户获取到。\"\n" +
                "\"1. 设计数港智联数智化平台中的，应用如何关联平台默认组织；如何在关联的默认组织中，加入自定义的组织架构的详细操作流程。\n" +
                "2. 参与油港平台中，多租户改造方案中的大屏如何关联玉衡平台，服务市场如何提供油港大屏的前置支撑，以及服务市场qps限制下的备用方案。\n" +
                "3. 调整后端提供的租户管理相关的接口，兼容前端的需求，保持和原有的接口同样的返回结构，和返回的数据结构中的key保持和原来的数据一致。\"\n" +
                "\"1. 修改玉衡平台中应用关联组织架构，并且各个应用可以自定义非公版组织架构的详细操作流程方案。\n" +
                "2. 修改油港平台中公司列表界面查询的接口，编辑的接口，并且本地启动，设计测试用例，本地测试，保证其服务器的稳定运行，为了后期前后端联调工作做好前置的准备工作。\n" +
                "3. 根据前端工程师的需求，调整平台基础菜单查询接口，当前租户已经分配的基础菜单接口，给当前租户分配基础菜单接口中，三个接口中的返回数据的数据结构，满足前端工程师的需求。\"\n" +
                "\"1. 根据前端工程师的需求重新调整，查询某一个租户下已经分配的平台基础菜单的数据结构从多节点数，调整为平铺结构；调整分配菜单是否选中回显接口的数据来源兼容原始基础菜单树。\n" +
                "2. 调整新增租户的接口，当新增一个租户的时候，默认也新增一个对应的根节点菜单，解决了新租户未分配菜单的时候，左侧菜单为空白的bug。\n" +
                "3. 调整租户相关内容的权限管理，其中新增租户必须只有「000000」超级管理员才能能够操作，给租户分配基础菜单也是同样的逻辑。\"\n" +
                "\"1. 调整油港的全局异常处理逻辑，兼容框架自带工具Assert判别式，抛出的异常种类，并且调整抛出异常的错误码，从而控制前端界面中显示的错误提示信息，给用户带来更好的使用体验。\n" +
                "2. 重构查询特定租户下可以分配的用户列表集合；特定租户下已经分配的管理员名单列表查询接口；给租户分配系统管理员接口；三个接口的详细处理逻辑。\n" +
                "3. 设计批量删除特定租户下已经分配系统管理员接口的详细处理逻辑，并且完成其具体的开发工作。\"\n" +
                "\"1. 油港多租户场景下，租户管理联调；\n" +
                "2. 租户分配菜单偶现接口性能差问题排查；\n" +
                "3. 给租户分配管理员中，删除租户下一个或者多个管理员接口开发，调试，联调；\n" +
                "4. 油港平台租户管理查询没有分配用户的租户列表，报错的问题，调整兼容空数据的情况解决。\"\n" +
                "\"1. 修复油港-多租户管理-新增租户场景中报错，租户负责人电话不能为空；和前端讨论决定去除租户负责人相关概念，使得前后端逻辑统一。\n" +
                "2. 设计平台管理员，管理整个系统平台用户模块相关的接口需求，已经接口执行的初步逻辑，建立相关的数据库表结构。\n" +
                "3. 排查玉衡平台vue3版本中，首页我的应用报错原因：没有同步数据库字段统一；同步字段统一后解决存在的问题。\n" +
                "4. 根据设计好的平台管理员，管理平台用户的基础方案，尝试进行初步的开发工作。\"\n" +
                "\"1. 排查油港平台-租戶管理模块-为平台管理员租户分配菜单场景中存在的业务bug，平台管理员不能分配菜单，因为平台管理员看到的菜单就是平台所有的基础菜单。\n" +
                "2. 构造导出油港全部数据表结构和名称，注释，关联关系的DDL，并且调试其中存在的问题。\n" +
                "3. 重新梳理油港平台全新的执行逻辑，明确平台管理员，系统管理员，普通用户，三种内容之间在用户管理场景中详细的管理方式。\n" +
                "4. 根据设计好的方案，初步开发完成平台管理员查询平台用户的接口；并且本地构造一些测试用例，保证后续前后端联调的梳理进行。\n" +
                "\"\n" +
                "\"1. 排查平台管理员在平台用户管理界面新增用户，然后切换到租户管理中，新增一个租户，然后给这个新增租户分配刚才新建用户之后，使用新用户登录，token接口中返回的菜单数据为空导致前端页面白屏的问题，并且给新用户赋予初始的基础菜单，解决bug。\n" +
                "2. 设计平台管理员管理平台用户场景中，如何新增平台用户，如何查询尚未分配租户的空白平台用户等几个场景中，需要使用到的，查询某一个租户下可以分配用户列表接口；给某一个租户新增用户接口；批量删除某一个租户下已经分配用户名单。\n" +
                "3. 根据设计好的接口方案，完成查询某一个租户下可以分配用户列表接口；给某一个租户新增用户接口；批量删除某一个租户下已经分配用户名单接口的开发工作，并且本地启动，构造测试用例，测试，保证后续的前后端联调的顺利进行。\n" +
                "4. 根据自测的内容，完成前端调用后台相关接口的方案设计，并且附上测试用例，方便前端工程师完成后续的对接工作，保证项目的持续稳定的推进工作。\"\n" +
                "\"1. 设计租户-用户管理界面中分配角色场景下的查询当前租户下存在的角色列表集合接口；给当前用户分配角色的接口；删除当前用户已经分配的角色的接口的执行方案。\n" +
                "2. 根据设计好的开发方案，完成查询当前租户下存在的角色列表集合接口；给当前用户分配角色的接口；删除当前用户已经分配的角色的接口三个接口的开发工作。\n" +
                "3. 本地构建测试用例，测试查询当前租户下存在的角色列表集合接口；给当前用户分配角色的接口；删除当前用户已经分配的角色的接口三个接口的功能是否稳定，并且设计好前端工程的对接方案，为后续的工作推进做好前置工作。\"\n" +
                "\"1. 修复系统管理-部门管理中删除某一个部门节点的时候使用历史用户-部门关联关系导致的平台阻断性bug，调整为使用用户-部门关联关系表查询用户和部门之间的联系从而解决其中存在的问题。\n" +
                "2. 全局链路自我测试，发现其中前端工程师接口混用，传递参数key与后台接口对接方案中标注的key不一致的问题，并且敦促前端工程师修改相关的问题。\n" +
                "3. 辅助测试工程师，讲解测试的相关链路，系统的业务操作流程，接口如何调用，租户如何切换等几个问题。\n" +
                "4. 修复测试工程师发现的，系统管理-租户管理场景中，新增租户的时候如果租户id重复，系统提示的报错信息，不符合用户的使用直觉。\"\n" +
                "\"1. 系统管理-租户管理模块中，发现不同的租户可以使用同一个租户名称，沟通确认不同租户的租户名称也是不能重复的，因此调整系统管理-租户管理中的「新增、修改」两个场景，确保了不能使用数据库中已经存在的租户名称。\n" +
                "2. 系统管理-系统用户管理模块中，发现当前租户的管理员可以解除自己与当前租户的关联关系，沟通确认允许存在此种业务，调整接口，校验删除租户用户的时候，不允许自己删除自己。\n" +
                "3. 油港平台工作台中，切换租户的时候，发现有些租户没有默认的菜单，调整接口兼容租户菜单不存在的情况，增强系统的健壮性。\n" +
                "\"\n" +
                "\"1. 梳理qdport-auth模块和登录之间的调用执行链路，寻找其中oauth/token接口获取用户信息的方式，设计一个后置增强的方式，对查询到的用户可以访问到的系统菜单进行特殊处理，如果返回的数组为空，则替换为返回无实际意义的根节点菜单。\n" +
                "2. 根据设计的方案，进行实际的开发，并且调整了一下存在的报错信息提示方案，并且本地启动，跳过前置和后置的链路直接访问auth模块，发现达到满意的效果，部署到测试环境提醒测试工程师进行测试。\n" +
                "3. 帮助测试工程师，创建一个新的租户，并且给当前租户下创建一个无任何角色，无任何可方案菜单的用户，为测试工程师做好测试的前置准备工作。\"\n" +
                "\"1. 梳理油港对接操作流程，为后续的油港生产运维支持工作做好前置准备。\n" +
                "2. 梳理平台管理员-管理用户的使用场景，在新增用户，修改用户，给用户分配角色，修改用户的密码等几个场景新增接口权限校验，并且本地测试，保证系统的稳定运行。\"\n" +
                "\"1. 辅助排查油港多租户平台中，平台管理员手动解除自己和某一个租户的关联关系，然后刷新页面链路中断的处理逻辑，发现是后台返回「用户没有权限访问」的提示信息，但是前端工程师没有对应的处理逻辑，商谈使用重定向到登录页面。\n" +
                "2. 支持igtos项目组升级玉衡框架中最新的auth、system、User三个模块解决项目中存在的垂直越权，swagger匿名访问的问题。\n" +
                "3. 排查igtos升级最新版本之后删除部门报错「invivad number」发现是请求数据和数据库数据类型不兼容问题。\"\n" +
                "\"1. 玉衡平台vue3版本中，发现系统监控、消息中心，等模块中出现一些接口异常，排查发现都是来源于qdport-edge模块，进一步排查发现问题都是kubernetes相关，查看配置文件发现是因为上次平台全局调整弱口令相关的问题，edge模块尚未同步弱口令，重新调整口令之后问题解决。\n" +
                "2. 标准化项目使用玉衡框架重构，历史功能和新功能如何兼容玉衡平台的方案设计。\n" +
                "3. 辅助梳理玉衡cloud版本和boot版本两个版本如何和标准化项目对接，标准化项目组如何使用玉衡框架提供的功能和服务，玉衡的特色功能，服务市场的作用和用途。\"\n" +
                "\"1. 在油港环境中，部署应用管理相关的内容，并且调试，其中存在类型不兼容的报错，然后重新发版解决其中存在的问题。\n" +
                "2. 针对油港-安全对接中存在的单点登录，获取code重定向之后无法获取其他的参数，使用state，加密内容，可以获取到了多余的传递参数。\n" +
                "3. 初步设计好了，用户首次登录的相关内容。\"";
        String replace = str.replaceAll("\n", "")
                .replaceAll("1panel", "panel")
                .replaceAll("\"", "");
        String[] list = replace.split("1.");
        for (String s : list) {
            if (StringUtils.isNotBlank(s)) {
                System.out.println("1." + s.replaceAll("panel", "1panel"));
            }
        }

    }
}
